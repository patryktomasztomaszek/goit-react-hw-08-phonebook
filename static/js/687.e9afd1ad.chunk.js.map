{"version":3,"file":"static/js/687.e9afd1ad.chunk.js","mappings":"iSACA,EAA6B,8B,UCgE7B,EAzDkB,WAChB,OAAgBA,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,mCAAG,WAAMC,GAAN,sFACpBA,EAAEC,iBACIC,EAAOF,EAAEG,OACTC,EAAQF,EAAKE,MAAMC,MACnBC,EAAWJ,EAAKI,SAASD,MAEzBE,EAAc,CAAEH,MAAAA,EAAOE,SAAAA,GANT,SAOdZ,EAAMa,GACTC,SACAC,MAAK,YAAuC,IAApCC,EAAmC,EAAnCA,MAAmC,IAA5BC,KAAQP,EAAoB,EAApBA,MAAOQ,EAAa,EAAbA,KAC7BC,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,IACzCA,GACFf,GAASsB,EAAAA,EAAAA,IAAQ,CAAEb,MAAAA,EAAOQ,KAAAA,IAE7B,IACAM,OAAM,WACLC,MAAM,6BACP,IAjBiB,uBAmBAJ,KAAKK,MAAMP,aAAaQ,QAAQ,UAnBhC,eAoBNC,KADRZ,EAnBc,4EAwBdf,GAAS4B,EAAAA,EAAAA,IAASb,IAxBJ,yBAyBdb,EAAS,aAzBK,QA0BpBK,EAAKsB,QA1Be,4CAAH,sDA6BXC,EAAeC,EACvB,OACE,+BACE,kBAAMC,UAAWF,EAAYG,SAAU7B,EAAvC,WACE,uCAEE,kBAAO8B,KAAK,QAAQjB,KAAK,QAAQkB,aAAa,QAAQC,UAAQ,QAEhE,yCAEE,kBACEF,KAAK,WACLjB,KAAK,WACLkB,aAAa,mBACbC,UAAQ,QAGZ,mBAAQF,KAAK,SAAb,wBAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.scss?8fcb","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login_form\":\"LoginPage_login_form__0K5yS\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addToken } from 'redux/tokenSlice';\nimport { addUser } from 'redux/userSlice';\nimport { useLoginMutation } from 'services/phonebookApi';\nimport styles from './LoginPage.module.scss';\n\nconst LoginPage = () => {\n  const [login] = useLoginMutation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const email = form.email.value;\n    const password = form.password.value;\n\n    const credentials = { email, password };\n    await login(credentials)\n      .unwrap()\n      .then(({ token, user: { email, name } }) => {\n        localStorage.setItem('token', JSON.stringify(token));\n        if (token) {\n          dispatch(addUser({ email, name }));\n        }\n      })\n      .catch(() => {\n        alert('Data incorrect! Try again.');\n      });\n\n    const token = await JSON.parse(localStorage.getItem('token'));\n    if (token === undefined) {\n      return;\n    }\n\n    await dispatch(addToken(token));\n    await navigate('/contacts');\n    form.reset();\n  };\n\n  const { login_form } = styles;\n  return (\n    <>\n      <form className={login_form} onSubmit={submitHandler}>\n        <label>\n          E-mail\n          <input type=\"email\" name=\"email\" autoComplete=\"email\" required />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"current-password\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Log in</button>\n      </form>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["useLoginMutation","login","dispatch","useDispatch","navigate","useNavigate","submitHandler","e","preventDefault","form","target","email","value","password","credentials","unwrap","then","token","user","name","localStorage","setItem","JSON","stringify","addUser","catch","alert","parse","getItem","undefined","addToken","reset","login_form","styles","className","onSubmit","type","autoComplete","required"],"sourceRoot":""}